# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

trigger: none
pr: none
schedules:
  - cron: '0 16 * * Mon,Wed,Fri'
    displayName: Sync from upstream three times a week
    branches:
      include:
        - main
    always: true

variables:
  - group: Microsoft-GoLang-bot
  - group: DotNet-VSTS-Infra-Access

resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    sdl:
      sourceAnalysisPool:
        name: NetCore1ESPool-Internal
        image: 1es-windows-2022
        os: windows
      suppression:
        suppressionFile: $(Build.SourcesDirectory)/.config/guardian/.gdnsuppress
      tsa:
        enabled: true
        configFile: $(Build.SourcesDirectory)/.config/tsa/tsaoptions.json

    stages:
      - stage: Sync
        jobs:
          - job: Sync
            pool:
              name: NetCore1ESPool-Internal
              image: 1es-ubuntu-2004
              os: linux
            workspace:
              clean: all
            steps:
              - template: /eng/pipelines/steps/checkout-unix-task.yml@self

              - template: /eng/pipelines/steps/init-go.yml@self
              - template: /eng/pipelines/steps/set-bot-git-author.yml@self

              - task: UniversalPackages@0
                displayName: "Download credential provider Artifact"
                name: "download_credProvider"
                inputs:
                  command: download
                  vstsFeed: "dnceng/internal/go-internal"
                  vstsFeedPackage: "terrapin-golang-cred-provider-linux-x64"
                  vstsPackageVersion: "1.*"
                  downloadDirectory: "$(Pipeline.Workspace)/terrapin-golang-cred-provider"

              - task: AzureCLI@2
                displayName: "Start the golang credential provider"
                timeoutInMinutes: 1
                env:
                  SYSTEM_ACCESSTOKEN: $(System.AccessToken)
                inputs:
                  azureSubscription: "DotNet-Engineering-Services_KeyVault"
                  scriptType: "bash"
                  scriptLocation: "inlineScript"
                  inlineScript: |
                    set -euo pipefail

                    chmod +x $(Pipeline.Workspace)/terrapin-golang-cred-provider/terrapin-golang-cred-provider
                    $(Pipeline.Workspace)/terrapin-golang-cred-provider/terrapin-golang-cred-provider --start-background

              - pwsh: |
                  $env:GOPROXY = "http://localhost:5000"
                  go run ./cmd/sync `
                    -git-auth api `
                    -github-user bot-for-go `
                    -github-app-client-id $(BotAccount-bot-for-go-client-id) `
                    -github-app-installation $(BotAccount-bot-for-go-installation) `
                    -github-app-private-key '$(BotAccount-bot-for-go-private-key)' `
                    -github-reviewer-pat $(BotAccount-microsoft-golang-review-bot-PAT) `
                    -azdo-dnceng-pat $(dn-bot-dnceng-build-rw-code-rw)
                displayName: Sync

              - bash: |
                  cat ~/.terrapin-golang-cred-provider/terrapin-golang-cred-provider.log*
                  $(Pipeline.Workspace)/terrapin-golang-cred-provider/terrapin-golang-cred-provider --stop-background
                condition: always()
                displayName: Print logs and kill background process
