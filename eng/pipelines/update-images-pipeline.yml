# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

trigger: none
pr: none

variables:
  - group: Microsoft-GoLang-bot

resources:
  pipelines:
    - pipeline: build
      source: microsoft-go
      trigger:
        branches:
          include:
            # The microsoft/go release branches deliver updates to go-images via
            # release automation, not this pipeline, so they are not included.

            # microsoft/main would be included if we wanted to deliver nightly
            # in-development builds from go-images.
            # See https://github.com/microsoft/go-lab/issues/80
            # - microsoft/main
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    sdl:
      sourceAnalysisPool:
        name: NetCore1ESPool-Svc-Internal
        image: 1es-windows-2022
        os: windows
      suppression:
        suppressionFile: $(Build.SourcesDirectory)/.config/guardian/.gdnsuppress
      tsa:
        enabled: true
        configFile: $(Build.SourcesDirectory)/.config/tsa/tsaoptions.json

    stages:
      - stage: Update
        jobs:
          - job: Update
            workspace:
              clean: all
            pool:
              name: NetCore1ESPool-Internal
              image: 1es-ubuntu-2004
              os: linux
            variables:
              assetJsonPath: $(Pipeline.Workspace)/build/BuildAssets/assets.json
            steps:
              - template: /eng/pipelines/steps/checkout-unix-task.yml@self

              - pwsh: |
                  echo "pipelineName: $(resources.pipeline.build.pipelineName)"
                  echo "pipelineID: $(resources.pipeline.build.pipelineID)"
                  echo "runName: $(resources.pipeline.build.runName)"
                  echo "runID: $(resources.pipeline.build.runID)"
                  echo "sourceBranch: $(resources.pipeline.build.sourceBranch)"
                  echo "sourceCommit: $(resources.pipeline.build.sourceCommit)"
                displayName: Log source build/pipeline info

              - download: build
                artifact: BuildAssets

              - template: /eng/pipelines/steps/init-go.yml@self
              - template: /eng/pipelines/steps/set-bot-git-author.yml@self

              - pwsh: |
                  go run ./cmd/dockerupdatepr `
                    -origin https://github.com/microsoft/go-images `
                    -github-app-id $(BotAccount-bot-for-go-app-id) `
                    -github-app-installation $(BotAccount-bot-for-go-installation) `
                    -github-app-private-key '$(BotAccount-bot-for-go-private-key)' `
                    -github-pat-reviewer $(BotAccount-microsoft-golang-review-bot-PAT) `
                    -build-asset-json "$(assetJsonPath)"
                displayName: Update go-images
