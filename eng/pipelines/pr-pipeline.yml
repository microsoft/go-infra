# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# This pipeline validates PRs. It builds the repo and runs inner loop tests.

trigger: none
pr:
  - main

jobs:
  - job: Test
    workspace:
      clean: all
    pool:
      # Use generic recent LTS.
      vmImage: ubuntu-22.04
    steps:
      - template: steps/checkout-unix-task.yml
      - template: steps/init-go.yml
      - template: steps/set-bot-git-author.yml

      - script: |
          go test -json ./... > $(Build.StagingDirectory)/TestResults.json
          go test -json -race ./telemetry/... > $(Build.StagingDirectory)/TestResults.json
        displayName: Test
        env:
          GOEXPERIMENT: synctest

      - script: |
          go run ./cmd/json2junit -in $(Build.StagingDirectory)/TestResults.json -out $(Build.StagingDirectory)/TestResults.xml
        displayName: Convert test results to JUnit format
        condition: succeededOrFailed()

      - task: PublishTestResults@2
        displayName: Publish test results
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: $(Build.StagingDirectory)/TestResults.xml
          publishRunAttachments: true

      # If the failure was a mismatch with golden files, show the difference for easier diagnosis.
      - script: go test ./... -update
        displayName: Update golden test results
        condition: failed()

      - script: git diff
        displayName: üîç Show golden file difference
        condition: failed()

  - template: jobs/fuzz.yml
    parameters:
      name: TestFuzz1x
      pool:
        vmImage: ubuntu-22.04
      platform: linux-amd64
      useMicrosoftGo: false
      # 1x runs the tests only once. It uses the first entry in the corpus so won't generate any
      # interesting results, only helps prevent regression for the actual fuzz runs.
      fuzztime: 1x
      # If 1x takes longer than a minute, it is probably frozen. Give some leeway, but terminate
      # much sooner than the actual fuzz tests would (an hour or more).
      jobTimeoutMinutes: 20
      runnerIDs: [1]
