# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# This job sets up an agent to run release steps. Installs tools and releasego.
parameters:
  # The job ID/name.
  job: Release

  # By default, let the job overall continue 9 hours before failing. The job time has to account for
  # upstream availability, sync PR validation jobs, mirroring time, and internal build time. Each
  # waiting step should specify its own timeout that's just long enough for that particular step, so
  # we don't need to wait 8 hours to get notified about any particular step taking too long.
  timeoutInMinutes: 540

  # Version to release, or empty string if no single version is associated with this job.
  releaseVersion: ''
  # The microsoft/go release issue to post a success/failure report to, or 'nil'.
  releaseIssue: nil
  # A string of flags to pass "add-retry-instructions" for this job, or empty string to skip.
  retryInstructionsFlags: ''

  # Additional variables to include.
  variables: {}
  # The release steps to run.
  steps: []

jobs:
  - job: ${{ parameters.job }}
    timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
    workspace:
      clean: all
    pool:
      # This is a utility job: use generic recent LTS.
      name: NetCore1ESPool-Svc-Internal
      image: 1es-ubuntu-2004
      os: linux
    variables:
      # Release steps may need to download build asset JSONs. Set up variables.
      assetsDir: $(Pipeline.Workspace)/BuildAssets
      buildAssetJsonFile: $(assetsDir)/assets.json
      artifactsDir: $(Pipeline.Workspace)/Artifacts

      # ID of the internal build pipeline. May need to be queued.
      microsoftGoInternalPipeline: 958

      # If we're going to add a retry instructions doc, include a direct link in the GitHub comment.
      ${{ if eq(parameters.retryInstructionsFlags, '') }}:
        instructionsLinkArg: ''
      ${{ if ne(parameters.retryInstructionsFlags, '') }}:
        instructionsLinkArg: '-instructions-link'

      ${{ insert }}: ${{ parameters.variables }}
    steps:
      - template: ../steps/fail-if-retry.yml

      - template: ../steps/checkout-unix-task.yml

      - template: ../steps/init-pwsh-task.yml
      - template: ../steps/init-go.yml
      - template: ../steps/set-bot-git-author.yml
      - script: |
          go install ./cmd/releasego
          echo "##vso[task.prependpath]$(go env GOPATH)/bin"
        displayName: Install releasego

      - template: ../steps/report.yml
        parameters:
          version: ${{ parameters.releaseVersion }}
          releaseIssue: ${{ parameters.releaseIssue }}
          reason: start
          buildStatus: InProgress
          start: true

      - script: releasego check-limits -pat '$(GitHubPAT)'
        displayName: Check GitHub rate limit

      - ${{ each step in parameters.steps }}:
        - ${{ step }}

      - script: releasego check-limits -pat '$(GitHubPAT)'
        displayName: Check GitHub rate limit

      - ${{ if ne(parameters.retryInstructionsFlags, '') }}:
        - script: |
            releasego add-retry-instructions ${{ parameters.retryInstructionsFlags }}
          displayName: üîÅ Add "Extensions" tab retry instructions
          condition: always()

      - template: ../steps/report.yml
        parameters:
          version: ${{ parameters.releaseVersion }}
          releaseIssue: ${{ parameters.releaseIssue }}
          reason: completion
